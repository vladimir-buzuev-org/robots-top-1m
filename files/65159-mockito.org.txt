<!DOCTYPE html>
<html dir="ltr" lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Mockito framework site</title>
	<meta name="keywords" content="java, mocking, mock, mock objects, testing, tdd, unit tests">
	<meta name="description" content="A landing page for information about Mockito framework, a mocking framework for unit tests written in Java.">
  <link rel="stylesheet" href="combo.css">
  <link href='http://fonts.googleapis.com/css?family=Raleway:400,300,700' rel='stylesheet' type='text/css'>
  <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css">
  <link rel="shortcut icon" href="favicon.ico" type="image/x-icon">
	
</head>
<body>
  <div id="main">

    <nav><ul>
      
        
        <li class="p-intro"><a href="#intro">Intro</a></li>
      
        
        <li class="p-why"><a href="#why">Why</a></li>
      
        
        <li class="p-how"><a href="#how">How</a></li>
      
        
        <li class="p-more"><a href="#more">More</a></li>
      
        
        <li class="p-who"><a href="#who">Who</a></li>
      
        
        <li class="p-links"><a href="#links">Links</a></li>
      
        
        <li class="p-training"><a href="#training">Training</a></li>
      
    </ul></nav>


    
      
      <div id="intro" class="section p-intro">
        
        <div class="container center">
          <h3>Tasty mocking framework for unit tests in Java</h3>

<p><img alt="Mockito" src="https://github.com/mockito/mockito.github.io/raw/master/img/logo%402x.png" width="400" /></p>

<div>

  <p><a href="https://travis-ci.org/mockito/mockito"><img src="https://travis-ci.org/mockito/mockito.svg?branch=release/2.x" alt="Build Status" /></a>
<a href="https://codecov.io/github/mockito/mockito"><img src="https://img.shields.io/codecov/c/github/mockito/mockito.svg" alt="Coverage Status" /></a>
<a href="https://github.com/mockito/mockito/blob/master/LICENSE"><img src="http://img.shields.io/badge/license-MIT-green.svg" alt="MIT License" /></a></p>

  <p><a href="https://bintray.com/mockito/maven/mockito-development/_latestVersion"><img src="https://api.bintray.com/packages/mockito/maven/mockito-development/images/download.svg" alt="Latest 2.x on bintray" /></a>
<a href="https://maven-badges.herokuapp.com/maven-central/org.mockito/mockito-core"><img src="https://maven-badges.herokuapp.com/maven-central/org.mockito/mockito-core/badge.svg?style=flat" alt="Latest 2.x on Maven Central" /></a></p>

</div>

<h3>Current version is <strong>2</strong></h3>

<p>Still on Mockito 1.x? See <a href="https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2">what’s new in Mockito 2</a>!</p>

<p>See the <a href="https://github.com/mockito/mockito/blob/release/2.x/doc/release-notes/official.md">release notes page</a>
and <a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html">latest documentation</a>
(docs in javadoc.io are available 24h after release).</p>

<p>Older 1.x releases are available in <a href="http://search.maven.org/#artifactdetails%7Corg.mockito%7Cmockito-core%7C1.10.19%7C">Central Repository</a>
, <a href="https://bintray.com/mockito/maven/mockito/1.10.19/view">Bintray</a> and <a href="http://www.javadoc.io/doc/org.mockito/mockito-core/1.10.19">javadoc.io</a> (documentation).</p>

<h3>Project status updates</h3>

<p>Updates are announced via <a href="https://twitter.com/mockitojava">Twitter</a> <img alt="Twitter logo" src="https://g.twimg.com/dev/img/marketing/twitter-for-websites/header-logo.png" width="21" height="21" /> and <a href="https://groups.google.com/group/mockito">mailing list</a> <img alt="Google Groups" src="https://groups.google.com/forum/favicon.ico" width="21" height="21" />.</p>

<p>After releasing Mockito 2 (<a href="https://github.com/mockito/mockito/wiki/What%27s-new-in-Mockito-2">see what’s new</a>) the team will continue to improve version 2.x for a short time, then focus on Mockito 3.
Please provide your feedback and suggestions for the scope of Mockito 3.x using the above two channels and <a href="https://github.com/mockito/mockito/issues">GitHub issue tracker</a>.
Mockito 3.x will target Java 8.</p>

<h3>Contributions welcome</h3>

<p>Fancy getting world-wide visibility and building up an eternal fame of an OSS contributor?</p>

<ul>
  <li>Help the <a href="https://github.com/mockito/mockito.github.io">project site</a> look decent and match the quality of the library!</li>
  <li><a href="https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md">Contribute</a> a pull request! It is automatically released via state-of-art <a href="http://szczepiq.blogspot.com/2014_08_01_archive.html">continuous delivery automation</a>.</li>
  <li>Use latest version! Hack and experiment. Speak up at the <a href="https://groups.google.com/group/mockito">mailing list</a>. Report <a href="https://github.com/mockito/mockito/issues">issues and new features</a>.</li>
</ul>

<p><span id="forkongithub">
  <a href="https://github.com/mockito/mockito" class="bg-green">
    Fork me on GitHub
  </a>
</span></p>


        </div>
      </div>
    
      
      <div id="why" class="section p-why">
        
        <div class="subtlecircle sectiondivider faicon">
          <span class="fa-stack">
            <i class="fa fa-circle fa-stack-2x"></i>
            <i class="fa fa-glass fa-stack-1x"></i>
          </span>
          <h5 class="icon-title"></h5>
        </div>
        
        <div class="container ">
          <h2>Why drink it?</h2>

<p>Mockito is a mocking framework that tastes really good.
It lets you write beautiful tests with a clean &amp; simple API.
Mockito doesn’t give you hangover because the tests are very readable and they produce clean verification errors.
Read more about <a href="https://github.com/mockito/mockito/wiki/Features-And-Motivations">features &amp; motivations</a>.</p>

<ul>
  <li>
    <p>Massive StackOverflow community voted Mockito the best mocking framework for java.
Even though StackOverflow shuns questions that likely raise emotional debates the fact is
<a href="http://stackoverflow.com/questions/22697/whats-the-best-mock-framework-for-java">Mockito has the most votes</a>.
You can add your vote, too!</p>
  </li>
  <li>
    <p>Top 10 Java library across all libraries, not only the testing tools.
In late 2013 there was an <a href="http://blog.takipi.com/we-analyzed-30000-github-projects-here-are-the-top-100-libraries-in-java-js-and-ruby">analysis</a>
made of 30.000 GitHub projects.
Although Mockito reached number 9 in the main report, mockito-core and mockito-all are the same tool
and therefore the factual position of Mockito is number 4, surpassing famous tools like Guava or Spring.
Treat this study as an indicator of a big impact that Mockito makes every day on unit tests written in Java.</p>
  </li>
  <li>
    <p><a href="https://twitter.com/tastapod">Dan North</a>, the originator of
<a href="http://en.wikipedia.org/wiki/Behavior-driven_development">Behavior-Driven Development</a> wrote this back in 2008:</p>

    <p>“We decided during the main conference that we should use JUnit 4 and Mockito
  because we think they are the future of TDD and mocking in Java”</p>

    <p>Given the current popularity of Mockito, Dan was spot on with his prediction.</p>
  </li>
</ul>

<p>Use your own judgement in choosing a testing framework.
The Mockito team always respects your choice. Keep writing great tests every day!</p>


        </div>
      </div>
    
      
      <div id="how" class="section p-how">
        
        <div class="subtlecircle sectiondivider faicon">
          <span class="fa-stack">
            <i class="fa fa-circle fa-stack-2x"></i>
            <i class="fa fa-check-square-o fa-stack-1x"></i>
          </span>
          <h5 class="icon-title"></h5>
        </div>
        
        <div class="container ">
          <h2>How do I drink it?</h2>

<p>Recommended way of getting Mockito is <a href="https://github.com/mockito/mockito/wiki/Declaring-mockito-dependency">declaring a dependency</a>
on “mockito-core” library using your favorite build system.
With <a href="http://gradle.org">Gradle</a> one can do:</p>

<figure class="highlight"><pre><code class="language-groovy" data-lang="groovy"><span class="n">repositories</span> <span class="o">{</span> <span class="n">jcenter</span><span class="o">()</span> <span class="o">}</span>
<span class="n">dependencies</span> <span class="o">{</span> <span class="n">testCompile</span> <span class="s2">"org.mockito:mockito-core:2.+"</span> <span class="o">}</span></code></pre></figure>

<p>Maven users can declare a <a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.mockito%22%2C%20a%3A%22mockito-core%22">dependency on mockito-core</a>.
Mockito is automatically published to <a href="http://jcenter.bintray.com/org/mockito/mockito-core">Bintray’s jcenter</a>
and synced to the Maven Central Repository.</p>

<p>Legacy builds with manual dependency management can use 1.* “mockito-all” distribution.
It can be downloaded from Mockito’s Bintray repository or Bintray’s jcenter.
“mockito-all” distribution has been discontinued in Mockito 2.*.</p>

<h2>now you can verify interactions</h2>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="kn">import</span> <span class="nn">static</span> <span class="n">org</span><span class="o">.</span><span class="na">mockito</span><span class="o">.</span><span class="na">Mockito</span><span class="o">.*;</span>

<span class="c1">// mock creation</span>
<span class="n">List</span> <span class="n">mockedList</span> <span class="o">=</span> <span class="n">mock</span><span class="o">(</span><span class="n">List</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

<span class="c1">// using mock object - it does not throw any "unexpected interaction" exception</span>
<span class="n">mockedList</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">"one"</span><span class="o">);</span>
<span class="n">mockedList</span><span class="o">.</span><span class="na">clear</span><span class="o">();</span>

<span class="c1">// selective, explicit, highly readable verification</span>
<span class="n">verify</span><span class="o">(</span><span class="n">mockedList</span><span class="o">).</span><span class="na">add</span><span class="o">(</span><span class="s">"one"</span><span class="o">);</span>
<span class="n">verify</span><span class="o">(</span><span class="n">mockedList</span><span class="o">).</span><span class="na">clear</span><span class="o">();</span></code></pre></figure>

<h2>and stub method calls</h2>

<figure class="highlight"><pre><code class="language-java" data-lang="java"><span class="c1">// you can mock concrete classes, not only interfaces</span>
<span class="n">LinkedList</span> <span class="n">mockedList</span> <span class="o">=</span> <span class="n">mock</span><span class="o">(</span><span class="n">LinkedList</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>

<span class="c1">// stubbing appears before the actual execution</span>
<span class="n">when</span><span class="o">(</span><span class="n">mockedList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">)).</span><span class="na">thenReturn</span><span class="o">(</span><span class="s">"first"</span><span class="o">);</span>

<span class="c1">// the following prints "first"</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">mockedList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">0</span><span class="o">));</span>

<span class="c1">// the following prints "null" because get(999) was not stubbed</span>
<span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">mockedList</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="mi">999</span><span class="o">));</span></code></pre></figure>


        </div>
      </div>
    
      
      <div id="more" class="section p-more">
        
        <div class="subtlecircle sectiondivider faicon">
          <span class="fa-stack">
            <i class="fa fa-circle fa-stack-2x"></i>
            <i class="fa fa-book fa-stack-1x"></i>
          </span>
          <h5 class="icon-title"></h5>
        </div>
        
        <div class="container ">
          <h2>More info</h2>

<p><a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html">Main reference documentation</a> features:</p>

<ul>
  <li><a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html#mock(java.lang.Class)"><code class="highlighter-rouge">mock()</code></a>/<a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mock.html"><code class="highlighter-rouge">@Mock</code></a>: create mock
    <ul>
      <li>optionally specify how it should behave via <a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html#field_summary"><code class="highlighter-rouge">Answer</code></a>/<a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/ReturnValues.html"><code class="highlighter-rouge">ReturnValues</code></a>/<a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/MockSettings.html"><code class="highlighter-rouge">MockSettings</code></a></li>
      <li><a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html#when(T)"><code class="highlighter-rouge">when()</code></a>/<a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/BDDMockito.html#given(T)"><code class="highlighter-rouge">given()</code></a> to specify how a mock should behave</li>
      <li>If the provided answers don’t fit your needs, write one yourself extending the <a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/stubbing/Answer.html"><code class="highlighter-rouge">Answer</code></a> interface</li>
    </ul>
  </li>
  <li><a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html#spy(T)"><code class="highlighter-rouge">spy()</code></a>/<a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Spy.html"><code class="highlighter-rouge">@Spy</code></a>:
partial mocking, real methods are invoked but still can be verified and stubbed</li>
  <li><a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/InjectMocks.html"><code class="highlighter-rouge">@InjectMocks</code></a>: automatically inject mocks/spies fields annotated with <code class="highlighter-rouge">@Spy</code> or <code class="highlighter-rouge">@Mock</code></li>
  <li><a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html#verify(T)"><code class="highlighter-rouge">verify()</code></a>: to check methods were called with given arguments
    <ul>
      <li>can use flexible argument matching, for example any expression via the <a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Matchers.html#any()"><code class="highlighter-rouge">any()</code></a></li>
      <li>or capture what arguments were called using <a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Captor.html"><code class="highlighter-rouge">@Captor</code></a> instead</li>
    </ul>
  </li>
  <li>Try Behavior-Driven development syntax with <a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/BDDMockito.html">BDDMockito</a></li>
  <li>Use Mockito on Android, thanks to the team working on <a href="https://github.com/crittercism/dexmaker">dexmaker</a></li>
</ul>

<h2>Remember</h2>

<ul>
  <li>Do not mock types you don’t own</li>
  <li>Don’t mock value objects</li>
  <li>Don’t mock everything</li>
  <li>Show love with your tests!</li>
</ul>

<p>Click <a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html">here</a> for more documentation and examples.
All documentation lives in javadocs so you don’t need to visit that page too often.
There is also a <a href="http://refcardz.dzone.com/refcardz/mockito">RefCard</a>.</p>

<p>If you have suggestions, find documentation unclear, or find a bug, write to our <a href="http://groups.google.com/group/mockito">mailing list</a>.
You can report feature requests and bugs in <a href="https://github.com/mockito/mockito/issues">GitHub</a>.</p>

        </div>
      </div>
    
      
      <div id="who" class="section p-who">
        
        <div class="subtlecircle sectiondivider faicon">
          <span class="fa-stack">
            <i class="fa fa-circle fa-stack-2x"></i>
            <i class="fa fa-trophy fa-stack-1x"></i>
          </span>
          <h5 class="icon-title"></h5>
        </div>
        
        <div class="container ">
          <p>Mockito is served to you by <strong><a href="https://twitter.com/szczepiq">Szczepan Faber</a> and friends</strong>.
First engineers who were using Mockito in production were developers of the
<a href="http://guardian.co.uk/">Guardian</a> project in London in early 2008.
Szczepan was lucky to be a part of the ThoughtWorks team assigned to the challenging and exciting Guardian project.
Here is how he explained why we needed <a href="http://monkeyisland.pl/2008/01/14/mockito">another mocking framework</a>?</p>

<p>Hats down before <strong><a href="http://easymock.org/">EasyMock</a> folks</strong> for their ideas on beautiful and refactoring-friendly mocking API.
<strong>First hacks on Mockito were done on top of the EasyMock code.</strong></p>

<p>Currently Mockito is maintained by <a href="https://twitter.com/szczepiq"><strong>Szczepan Faber</strong></a>, <a href="https://twitter.com/BriceDutheil"><strong>Brice Dutheil</strong></a>, <a href="https://twitter.com/rafaelcodes"><strong>Rafael Winterhalter</strong></a>, <a href="https://twitter.com/TimvdLippe"><strong>Tim van der Lippe</strong></a>, Marcin Grzejszczak, Marcin Zajączkowski and
a small <a href="https://github.com/mockito/mockito/graphs/contributors">army of contributors</a>.
Friends who contributed to Mockito (apologize if I missed somebody):
<strong>Pascal Schumacher</strong>, <strong>Christian Schwartz</strong>, <strong>Igor Czechowski</strong>, <strong>Patric Fornasier</strong>, <strong>Jim Barritt</strong>,
<strong>Felix Leipold</strong>, <strong>Liz Keogh</strong>, <strong>Dan North</strong>, <strong>Bartosz Bańkowski</strong>, <strong>David Wallace</strong>.</p>

<p><a href="https://travis-ci.org/mockito/mockito">Travis CI</a> and <a href="https://bintray.com/szczepiq/maven/mockito/view">Bintray</a> are used to facilitate continuous delivery.
Both tools are great. Thank you Travis, thank you Bintray!</p>

<ul>
  <li>Thanks to <strong>Éric Lefevre-Ardant</strong> for his long running and continuous support on the mailing-list</li>
  <li>Thanks to <strong>Erik Ramfelt</strong>, and <strong>Steve Christou</strong> for the Jenkins server that was used originally for CI.</li>
  <li>Thanks to <strong>Erik Brakkee</strong> who originally helped with maven central syncing.</li>
  <li>Thanks to <strong>Igor Czechowski</strong> for dealing with maven central and for the name “Mockito”!</li>
  <li>Thanks to <strong>Karol Poźniak</strong> for the original colorful logo, <strong>Darek Chrzan</strong> for the second one, and <strong>Évy Dutheil</strong> for the third :)</li>
</ul>

        </div>
      </div>
    
      
      <div id="links" class="section p-links">
        
        <div class="subtlecircle sectiondivider faicon">
          <span class="fa-stack">
            <i class="fa fa-circle fa-stack-2x"></i>
            <i class="fa fa-link fa-stack-1x"></i>
          </span>
          <h5 class="icon-title"></h5>
        </div>
        
        <div class="container ">
          <h2>Useful links</h2>

<h3>Wiki</h3>
<ul>
  <li><a href="https://github.com/mockito/mockito/wiki/FAQ">FAQ</a></li>
  <li><a href="https://github.com/mockito/mockito/wiki/How-to-write-good-tests">Writing good tests</a></li>
  <li><a href="https://github.com/mockito/mockito/blob/master/.github/CONTRIBUTING.md">How to contribute</a></li>
  <li><a href="https://github.com/mockito/mockito/wiki/Mockito-vs-EasyMock">Mockito VS EasyMock</a></li>
  <li><a href="https://github.com/mockito/mockito/wiki/Related-Projects">Related projects</a></li>
  <li><a href="https://github.com/mockito/mockito/blob/master/doc/release-notes/official.md">Release notes</a></li>
  <li><a href="https://github.com/mockito/mockito/wiki">More wiki pages</a></li>
</ul>

<h3>Blogs</h3>
<ul>
  <li><a href="http://szczepiq.blogspot.com/">Szczepan’s new blog</a></li>
  <li><a href="http://blog.arkey.fr/">Brice’s French coffee workshop</a></li>
  <li><a href="http://mydailyjava.blogspot.fr/">Rafael’s daily java blog</a></li>
</ul>

<h3>Other project links</h3>
<ul>
  <li><a href="http://javadoc.io/page/org.mockito/mockito-core/latest/org/mockito/Mockito.html">Latest documentation</a></li>
  <li><a href="http://refcardz.dzone.com/refcardz/mockito">Dzone Reference Card</a></li>
  <li><a href="http://travis-ci.org/mockito/mockito">Continuous integration server</a></li>
  <li><a href="https://waffle.io/mockito/mockito">What we are working on</a></li>
</ul>

<h3>Groups</h3>
<ul>
  <li><a href="http://groups.google.com/group/mockito">Mockito mailing list</a></li>
  <li><a href="http://stackoverflow.com/questions/tagged/mockito">StackOverflow</a></li>
</ul>

<h3>Software</h3>
<p>Thanks to commercial software that help us build mockito</p>

<ul>
  <li><a href="https://www.yourkit.com/java/profiler/features/"><img src="https://www.yourkit.com/images/yklogo.png" alt="Yourkit" /></a> A great Java Profiler that helps tackle performance problems.</li>
  <li><a href="https://www.jetbrains.com/idea/">JetBrains IntelliJ IDEA</a> that is a fantastic IDE. With many cool features.</li>
</ul>

        </div>
      </div>
    
      
      <div id="training" class="section p-training">
        
        <div class="subtlecircle sectiondivider faicon">
          <span class="fa-stack">
            <i class="fa fa-circle fa-stack-2x"></i>
            <i class="fa fa-link fa-stack-1x"></i>
          </span>
          <h5 class="icon-title"></h5>
        </div>
        
        <div class="container ">
          <h3>Training by core engineers</h3>

<p>Mockito core engineers, experts in the field of software quality can help you with:</p>

<ul>
  <li>getting your team up to speed with test automation with mock objects</li>
  <li>enabling and sustaining test driven development in its best form: BDD</li>
  <li>achieving maintainable, high quality tests that unlock continuous delivery</li>
  <li>securing production code quality and minimizing defects through rigorous test automation</li>
</ul>

<p>Get in touch at <a href="mailto:info@mockito.org">info@mockito.org</a></p>

        </div>
      </div>
    


    <div id="footer" class="section text-white">
      <div class="container">
        
        
<p>Mockito is <a href="https://github.com/mockito/mockito">open source</a>
—
Want to <a href="https://github.com/mockito/mockito/blob/master/CONTRIBUTING.md">contribute?</a>
—
Issue <a href="https://github.com/mockito/mockito/issues">tracker</a>
—
Mailing <a href="http://groups.google.com/group/mockito">list</a>
—
Training <a href="#training">offering</a></p>

      </div>
    </div>
  </div>


</body>
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="site.js"></script>
</html>
