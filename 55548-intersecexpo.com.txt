

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head id="Head1">
    <!-- Google Tag Manager -->
    <script>(function (w, d, s, l, i) {
    w[l] = w[l] || []; w[l].push({
        'gtm.start':
        new Date().getTime(), event: 'gtm.js'
    }); var f = d.getElementsByTagName(s)[0],
    j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
    'https://www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
})(window, document, 'script', 'dataLayer', 'GTM-NMF9JV');</script>
    <!-- End Google Tag Manager -->


    <title>
	404 Error | Messe Frankfurt
</title><meta http-equiv="X-UA-Compatible" content="IE=8" />
        <link href="/assets/styles/style.css" rel="stylesheet" type="text/css" />
        <script type="text/javascript" src="/assets/js/jquery-1.7.1.js"></script>
        <script type="text/javascript" src="/assets/teasers/js/jquery-ui-1.7.2.custom.min.js"></script>
        <script type="text/javascript" src="/assets/fancybox/jquery.fancybox-1.3.5.js"></script>
        
        <link rel="stylesheet" type="text/css" href="/assets/fancybox/contact.fancybox.css"
            media="screen" />
        <script type="text/javascript">
            function popup(url) {
                newwindow = window.open(url, 'PrintMe', 'height=650px,width=650px,scrollbars=1 resizable=yes');
                if (window.focus) { newwindow.focus() }
                return false;
            }

            $(document).ready(function () {

                $(".map-link").fancybox({
                    'width': '50%',
                    'height': '100%',
                    'autoScale': true,
                    'transitionIn': 'elastic',
                    'transitionOut': 'none',
                    'titleShow': false

                });


                $("#lnkEmail").fancybox({
                    'width': '47%',
                    'height': '100%',
                    'autoScale': true,
                    'transitionIn': 'elastic',
                    'transitionOut': 'none',
                    'titleShow': false,
                    'type': 'iframe',


                    onStart: function (event, ui) { $(this).parent().appendTo($("form:first")) }  // <== You need to call this on start event of facebox

                });
                $('.menu_link').fancybox({
                    'width': '61%',
                    'height': '100%',
                    'autoScale': true,
                    'transitionIn': 'elastic',
                    'transitionOut': 'none',
                    'titleShow': false,
                    'type': 'iframe',

                    onStart: function (event, ui) { $(this).parent().appendTo($("form:first")) }, // <== You need to call this on start event of facebox
                    onClosed: function () {
                        parent.location.reload(true);

                    }
                });


                $('.manage_events').fancybox({
                    'width': '61%',
                    'height': '100%',

                    'autoScale': true,
                    'transitionIn': 'elastic',
                    'transitionOut': 'none',
                    'titleShow': false,
                    'type': 'iframe',


                    onStart: function (event, ui) { $(this).parent().appendTo($("form:first")) }, // <== You need to call this on start event of facebox
                    onClosed: function () {
                        parent.location.reload(true);

                    }
                });


                $('.add_events').fancybox({
                    'width': '61%',
                    'height': '500',
                    'autoScale': true,
                    'transitionIn': 'elastic',
                    'transitionOut': 'none',
                    'titleShow': false,
                    'type': 'iframe',

                    onStart: function (event, ui) { $(this).parent().appendTo($("form:first")) }, // <== You need to call this on start event of facebox
                    onClosed: function () {
                        parent.location.reload(true);

                    }
                });
                $('.top_menu_mng_link').fancybox({
                    'width': '61%',
                    'height': '100%',
                    'autoScale': true,
                    'transitionIn': 'elastic',
                    'transitionOut': 'none',
                    'titleShow': false,
                    'type': 'iframe',

                    onStart: function (event, ui) { $(this).parent().appendTo($("form:first")) }, // <== You need to call this on start event of facebox
                    onClosed: function () {
                        parent.location.reload(true);

                    }
                });

                $('.city').fancybox({
                    'width': 1200,
                    'height': 800,
                    'titleShow': false,
                    'type': 'iframe',
                    onStart: function (event, ui) { $(this).parent().appendTo($("form:first")) }, // <== You need to call this on start event of facebox
                    onClosed: function () {
                    }
                });

            });



        </script>
        <!--Cufon starts -->
        <script type="text/javascript" src="/assets/scripts/cufon-font-yui.js"></script>
        <script type="text/javascript" src="/assets/scripts/Messe_Univers_400.js"></script>
        <script type="text/javascript" src="/assets/scripts/cufon-font-replacement.js"></script>
        <script language="javascript">
            function ZoomIn(baseRes) {


                var currentZoom = 0;

                if ($('#txthiddenVal').val() == '')
                    currentZoom = 1;
                else
                    currentZoom = parseFloat($('#txthiddenVal').val());

                if (currentZoom <= 1.04) {
                    currentZoom += 0.015;

                    var el = $('#divWraper');

                    $('#divWraper').css({
                        zoom: currentZoom,

                        '-webkit-transform': 'scale(' + currentZoom + ')',
                        '-webkit-transform-origin': '900px 0',
                        '-ms-transform': 'scale(' + currentZoom + ')',
                        '-ms-transform-origin': '900px 0',
                        '-o-transform': 'scale(' + currentZoom + ')',
                        '-o-transform-origin': '900px 0',
                        '-moz-transform': 'scale(' + currentZoom + ')',
                        '-moz-transform-origin': '900px 0',
                        'transform': 'scale(' + currentZoom + ')',
                        'transform-origin': '900px 0'
                    });


                    if (navigator.userAgent.indexOf('MSIE') > 0) {
                        var rightFactor = 0;

                        if ($('#txtZoomFactorIE').val() == '')
                            rightFactor = 20;
                        else
                            rightFactor = parseInt($('#txtZoomFactorIE').val());

                        rightFactor = rightFactor - 20;
                        document.getElementById("divTopSearch").setAttribute('style', 'right:' + rightFactor + 'px !important');
                        $('#txtZoomFactorIE').val('');
                        $('#txtZoomFactorIE').val(rightFactor);

                    }

                    $('#txthiddenVal').val('');
                    $('#txthiddenVal').val(currentZoom);
                }
            }


            function ZoomOut(baseRes) {
                var currentZoom = 0;

                if ($('#txthiddenVal').val() == '')
                    currentZoom = 1;
                else {
                    currentZoom = parseFloat($('#txthiddenVal').val());
                }


                if (currentZoom >= 0.97) {
                    currentZoom -= 0.015;
                    $('#divWraper').css({
                        zoom: currentZoom,

                        '-webkit-transform': 'scale(' + currentZoom + ')',
                        '-webkit-transform-origin': '900px 0',
                        '-ms-transform': 'scale(' + currentZoom + ')',
                        '-ms-transform-origin': '900px 0',
                        '-o-transform': 'scale(' + currentZoom + ')',
                        '-o-transform-origin': '900px 0',
                        '-moz-transform': 'scale(' + currentZoom + ')',
                        '-moz-transform-origin': '900px 0',
                        'transform': 'scale(' + currentZoom + ')',
                        'transform-origin': '900px 0'

                    });

                    if (navigator.userAgent.indexOf('MSIE') > 0) {

                        var rightFactor = 0;

                        if ($('#txtZoomFactorIE').val() == '')
                            rightFactor = 20;
                        else
                            rightFactor = parseInt($('#txtZoomFactorIE').val());

                        rightFactor = rightFactor + 20;
                        document.getElementById("divTopSearch").setAttribute('style', 'right:' + rightFactor + 'px !important');

                        $('#txtZoomFactorIE').val('');
                        $('#txtZoomFactorIE').val(rightFactor);

                    }

                    $('#txthiddenVal').val('');
                    $('#txthiddenVal').val(currentZoom);
                }
            }

            //<style>
            //body { ; }
            //</style>
        </script>
    
    <!--Cufon ends -->
    

    <script type="text/javascript">

        function getParam(name) {
            name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
            var regexS = "[\\?&]" + name + "=([^&#]*)";
            var regex = new RegExp(regexS);
            var results = regex.exec(window.location.href);

            if (results == null)
                return "";
            else
                return results[1];
        }

        function scrolltotop() {

            scroll(0, 0);

        }



        function getElement(aID) {

            return (document.getElementById) ? document.getElementById(aID) : document.all[aID];

        }



        function getIFrameDocument(aID) {

            var rv = null;

            var frame = getElement(aID);

            // if contentDocument exists, W3C



            // compliant (e.g. Mozilla)

            if (frame.contentDocument)

                rv = frame.contentDocument;

            else // bad Internet Explorer  ;)

                rv = document.frames[aID].document;

            return rv;

        }

    </script>
    <!-- Facebook Pixel Code -->
    <script>
        !function (f, b, e, v, n, t, s) {
            if (f.fbq) return; n = f.fbq = function () {
                n.callMethod ?
n.callMethod.apply(n, arguments) : n.queue.push(arguments)
            }; if (!f._fbq) f._fbq = n;
            n.push = n; n.loaded = !0; n.version = '2.0'; n.queue = []; t = b.createElement(e); t.async = !0;
            t.src = v; s = b.getElementsByTagName(e)[0]; s.parentNode.insertBefore(t, s)
        }(window,
document, 'script', '//connect.facebook.net/en_US/fbevents.js');

        fbq('init', '911996668888526');
        fbq('track', "PageView");</script>
    <noscript>
        <img height="1" width="1" style="display: none" src="https://www.facebook.com/tr?id=911996668888526&ev=PageView&noscript=1" />
    </noscript>
    <!-- End Facebook Pixel Code -->
</head>
<body id="body" onload="changeSrc();">
    <!-- Google Tag Manager -->
    <noscript>
        <iframe src="https://www.googletagmanager.com/ns.html?id=GTM-NMF9JV" height="0" width="0"
            style="display: none; visibility: hidden"></iframe>
    </noscript>
    <script>        (function (w, d, s, l, i) {
            w[l] = w[l] || []; w[l].push({
                'gtm.start':
    new Date().getTime(), event: 'gtm.js'
            }); var f = d.getElementsByTagName(s)[0],
j = d.createElement(s), dl = l != 'dataLayer' ? '&l=' + l : ''; j.async = true; j.src =
'//www.googletagmanager.com/gtm.js?id=' + i + dl; f.parentNode.insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-NMF9JV');</script>
    <!-- End Google Tag Manager -->
    <script type="text/javascript">
        function changeSrc() {

            // Get the query string

            var qs = location.search;



            var frame = getElement("isaContent");
            var iFrameSrc = 'http://www.intersecexpo.com' + "?p=" + getParam("p");
            // var iFrameSrc = "http://stageme3.infosalons.biz/reg/HARDWARE14DU/start.asp?p=" + getParam("p");



            // If the array length is more than 1 then change the src

            if (qs != undefined) {



                // Get the string after index.html

                var stringToAppened = qs;



                // Appened the string into the source of the iFrame

                var iFrameNewSrc = iFrameSrc + stringToAppened;



                // Put the string back into the frame

                frame.src = iFrameNewSrc;

            } else {

                frame.src = iFrameSrc;

            }

        }
    </script>
    <form method="post" action="/robots.txt" id="form1">
<div class="aspNetHidden">

</div>


<script src="/ScriptResource.axd?d=ULDuNAq8_hY2BNIFih6ZlR2Azx4XMudbMeThlZpySOlf5i0bGqTx9_Az5eVONORNRKNTKhK81cvSUdwEJR4mbr8ZYvABsYSArdgM9yw8uKey_Kowig2lBk5NeVLMlA7erw9EkXIJ7WIKigJNxBuL3UQLUCjC4HEXo2jiEMTMslYOQJ1Q0&amp;t=72e85ccd" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
if (typeof(Sys) === 'undefined') throw new Error('ASP.NET Ajax client-side framework failed to load.');
//]]>
</script>

        
        <!---wrapper starts--->
        <div class="wrapper">
            <!---top-area starts--->
            <div id="divIFtoparea">
                <div class="top-area">
                    <!---logo starts--->
                    <div class="logo">
                        <a href="http://www.messefrankfurtme.com" target="_blank">
                            <img src="/assets/images/logo_mf.gif" alt="Home logo" /></a>
                    </div>
                    <!---logo ends--->
                    <!---mfTopNavigation starts--->
                    
<div class="topnavigation">
    
            <ul>
        
            <li><a id="TopMenu1_rptrTopMenu_lnkTopMenu_0" href="http://www.intersecexpo.com/frankfurt/51/for-exhibitors/for-exhibitors.aspx"><span id="TopMenu1_rptrTopMenu_spanTopMenu_0">
                For Exhibitors
            </span></a></li>

        
            <li><a id="TopMenu1_rptrTopMenu_lnkTopMenu_1" href="http://www.intersecexpo.com/frankfurt/18/for-visitors/welcome.aspx"><span id="TopMenu1_rptrTopMenu_spanTopMenu_1">
                For Visitors
            </span></a></li>

        
            <li><a id="TopMenu1_rptrTopMenu_lnkTopMenu_2" href="http://www.intersecexpo.com/frankfurt/37/for-organizer/welcome.aspx"><span id="TopMenu1_rptrTopMenu_spanTopMenu_2">
                For Conferences
            </span></a></li>

        
            <li><a id="TopMenu1_rptrTopMenu_lnkTopMenu_3" href="https://ae.messefrankfurt.com/dubai/en/media/technology-production/Intersec.html" target="_blank"><span id="TopMenu1_rptrTopMenu_spanTopMenu_3">
                For Journalists
            </span></a></li>

        
            <li><a id="TopMenu1_rptrTopMenu_lnkTopMenu_4" class="company" href="http://www.messefrankfurtme.com" target="_blank"><span id="TopMenu1_rptrTopMenu_spanTopMenu_4">
                The Company
            </span></a></li>

        
            </ul>
</div>

                    <!---mfTopNavigation ends--->
                    <!---mf claim starts--->
                    <div class="mfclaim">
                        <img src="/assets/images/calim.gif" alt="Calim" />
                    </div>
                    <!---mf claim ends--->
                </div>
            </div>
            <!---top-area ends--->
            <!---wrapper-scroll starts--->
            <div class="wrapper-scroll" id="divWraper">
                <div id="divIFwrap">
                    <!---wrapper-content starts--->
                    <div class="wrapper-content">
                        <!---mf-header starts--->
                        

<script type="text/javascript">
    $(document).ready(function() {
        $('.mf-header').live('mouseenter', function() {
            jQuery("a[class=cnt-mouse-hide-banner]", this).fadeIn(50);
        });
        $('.mf-header').live('mouseleave', function() {
            jQuery("a[class=cnt-mouse-hide-banner]", this).fadeOut(50);
        });

        $(".cnt-mouse-hide-banner").fancybox({
            'width': '61%',
            'height': '100%',
            'autoScale': true,
            'transitionIn': 'elastic',
            'transitionOut': 'none',
            'titleShow': false,
            'type': 'iframe',


            onStart: function(event, ui) { $(this).parent().appendTo($("form:first")) }, // <== You need to call this on start event of facebox
            onClosed: function() {
                parent.location.reload(true);

            }
        });

    });
</script>

<div id="HeaderBanner_div_hide_topbanner_for_iframe">
<div class="mf-header">

<div class="mf-over-area">
    <!---srch-area starts--->
  <div id="HeaderBanner_div_hide_search_for_iframe">
    <div class="srch-area" id="divTopSearch">
        <div class="src-box" id="divSerchBox">
            <input name="ctl00$HeaderBanner$txtSearchText" type="text" id="HeaderBanner_txtSearchText" />
            <input type="image" name="ctl00$HeaderBanner$btnSubmit" id="HeaderBanner_btnSubmit" class="src-box-btn" src="http://www.intersecexpo.com/assets/images/src-arr.jpg" />
            <input type="hidden" name="ctl00$HeaderBanner$hidRefesh" id="HeaderBanner_hidRefesh" value="0" />
        </div>
        <!---src-list starts--->
        
        <!---src-list ends--->
        

<script type="text/javascript">

    $(document).ready(function() {

        $("#divSerchList").hide();
        $("#divSerchBox").show();

        $('#divSerchBox').click(function() {
            $("#divSerchList").slideToggle();

        });

        $("#divexhiList").hide();
        $("#divexhiBox").show();

        $('#divexhiBox').click(function() {
            $("#divexhiList").slideToggle();

        });

        $("#divcongList").hide();
        $("#divcongBox").show();

        $('#divcongBox').click(function() {
            $("#divcongList").slideToggle();

        });


        $("#divSerchList").mouseleave(function() {
            $("#divSerchList").slideUp('fast');

        });

        $("#divexhiList").mouseleave(function() {
            $("#divexhiList").slideUp('fast');

        });

        $("#divcongList").mouseleave(function() {
            $("#divcongList").slideUp('fast');

        });



    });


    $(document).ready(function() {

        $(".slidingDivCrono").hide();
        $(".show_hideAlph").hide();

        $(".slidingDivAplh").show();
        $(".show_hideCrono").show();


        $('.show_hideCrono').click(function() {
            $(".slidingDivCrono").fadeIn();
            $(".slidingDivAplh").fadeOut();
            $(".show_hideCrono").fadeOut();
            $(".show_hideAlph").fadeIn();
        });
        $('.show_hideAlph').click(function() {
            $(".slidingDivAplh").fadeIn();
            $(".slidingDivCrono").fadeOut();
            $(".show_hideAlph").fadeOut();
            $(".show_hideCrono").fadeIn();

        });
    });

</script>

<!---exhi-az starts--->
<div class="exhi-az" id="divexhiBox">
    <h1>
        Exhibitions (A-Z)</h1>
</div>
<!---exhi-az ends--->
<!---exhi-list starts--->
<div class="exhi-list" id="divexhiList" style="display: none">
    <ul>
        <li><a href="/event-search.aspx">Event search</a> <a href="#"
            class="show_hideCrono">Chronological</a> </li>
        <li><a href="#" class="show_hideAlph">Alphabetical</a></li>
    </ul>
    <div class="border">
    </div>
    <div class="slidingDivAplh">
        
                <ul class="sub-ex">
                    <h1>
                        A</h1>
                    
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=2&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_0_lnkTitle_0">
                                Automechanika Dubai
                            </a></li>
                        
                </ul>
            
                <ul class="sub-ex">
                    <h1>
                        B</h1>
                    
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=3&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_1_lnkTitle_0">
                                Beautyworld Middle East
                            </a></li>
                        
                </ul>
            
                <ul class="sub-ex">
                    <h1>
                        H</h1>
                    
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=4&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_2_lnkTitle_0">
                                Hardware+Tools Middle East
                            </a></li>
                        
                </ul>
            
                <ul class="sub-ex">
                    <h1>
                        I</h1>
                    
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=7&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_3_lnkTitle_0">
                                Intersec
                            </a></li>
                        
                </ul>
            
                <ul class="sub-ex">
                    <h1>
                        L</h1>
                    
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=11&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_4_lnkTitle_0">
                                Leatherworld Middle East
                            </a></li>
                        
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=9&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_4_lnkTitle_1">
                                Light Middle East
                            </a></li>
                        
                </ul>
            
                <ul class="sub-ex">
                    <h1>
                        M</h1>
                    
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=8&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_5_lnkTitle_0">
                                Materials Handling Middle East
                            </a></li>
                        
                </ul>
            
                <ul class="sub-ex">
                    <h1>
                        P</h1>
                    
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=5&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_6_lnkTitle_0">
                                Paperworld Middle East
                            </a></li>
                        
                            <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=6&typ=1" id="HeaderBanner_ExhibitionSearchBox_dlInitials_rptNames_6_lnkTitle_1">
                                Playworld Middle East
                            </a></li>
                        
                </ul>
            
    </div>
    <div class="slidingDivCrono" style="display: none">
        
                <ul>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=11&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_0">
                    Leatherworld Middle East
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=2&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_1">
                    Automechanika Dubai
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=4&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_2">
                    Hardware+Tools Middle East
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=8&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_3">
                    Materials Handling Middle East
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=9&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_4">
                    Light Middle East
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=7&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_5">
                    Intersec
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=5&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_6">
                    Paperworld Middle East
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=6&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_7">
                    Playworld Middle East
                </a></li>
            
                <li><a href="http://www.intersecexpo.com/event-details.aspx?event_id=3&typ=1" id="HeaderBanner_ExhibitionSearchBox_rptrEvents_lnkTitle_8">
                    Beautyworld Middle East
                </a></li>
            
                </ul>
    </div>
</div>

        
<!---exhi-az starts--->
<script type="text/javascript">

    $(document).ready(function() {
   $("#slidingCongress").show();
    });


    

</script>
<div class="cong-evt" id="divcongBox">
    <h1>
        Conferences/Workshops</h1>
</div>
<!---exhi-az ends--->
<!---exhi-list starts--->
<div class="cong-list" id="divcongList" style="display:none">
    <ul>
        <li><a href="/events.aspx?type=2">Conferences</a></li>
        <li><a href="/events.aspx?type=3">Workshops</a></li>
    </ul>
    
    <div class="border"></div>
    
    <h1>Top Links</h1>
    <div class="cong-sub-list" style="display:none" id="slidingCongress">
    
            <ul class="sub-cong">
                <li>
                    <a id="HeaderBanner_CongressEventsSearchBox_rptrEvents_hypDetails_0" title="View details" href="/event-details.aspx?event_id=10">Beautyworld Middle East Summit</a>
                </li>
            </ul>
        
            <ul class="sub-cong">
                <li>
                    <a id="HeaderBanner_CongressEventsSearchBox_rptrEvents_hypDetails_1" title="View details" href="/event-details.aspx?event_id=12">Light Middle East Conference</a>
                </li>
            </ul>
        
    </div>
    
</div>
<!---exhi-list ends--->

    </div>
    </div>
    
    </div>
    
    
    <!---srch-area ends--->
    <img id="HeaderBanner_imgTopBanner" src="http://www.intersecexpo.com/assets/images/header.jpg" alt="Top Banner" style="height:113px;width:968px;" />
    

    
</div>
</div>
                        
                        <!---mf-header ends--->
                        <div id="divIFtitle">
                            <!---mf-title-area starts--->
                            <div class="mf-title-area">
                                <!---mf-title starts--->
                                <div class="mf-title">
                                    <h2 id="h2Heading" style="width: auto">
                                        </h2>
                                </div>
                                
                                <!---mf-title ends--->
                                <!---online-ticketing starts--->
                                
                                
                                <!---online-ticketing ends--->
                            </div>
                            <!---mf-title-area ends--->
                            <!---mfBreadcrumb starts--->
                            <div class="mfBreadcrumb">
                                <!---b-crumb starts--->
                                <div id="divBreadCrmbs"><div class="b-crumb"><ul><li class="mf-first"><a runat='server' href='http://www.intersecexpo.com/default.aspx'>Messe Frankfurt</a></li></ul></div></div>
                                <!---b-crumb ends--->
                                <!---font-size-switch starts--->
                                
<script type="text/javascript" src='/assets/js/accessibility/dw_cookies.js'></script>

<script type="text/javascript" src='/assets/js/accessibility/dw_sizerdx.js'></script>

<script type="text/javascript">
//defaultSize: 13,
//    maxSize: 21,
//    minSize: 9,
    // setDefaults arguments: size unit, default size, minimum, maximum
//    dw_fontSizerDX.setDefaults( "px", 12, 10, 16, ['div#hl-article-detail'] );
//    dw_fontSizerDX.set(11, 10, 18, ['div#article-detail-content ul li','div#article-detail-content h4','div#article-detail-content p' ]);
//  
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['div#divContent'] );
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['p#divContent'] );
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['div#divContent span'] );
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['div#divContent span p'] );
    
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['div#divContent h1'] );
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['div#divContent h2'] );
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['div#divContent h3'] );
    dw_fontSizerDX.setDefaults( "px", 14,10 ,18 , ['div#divContent h4'] );
    
    addLoadEvent( dw_fontSizerDX.init );
</script>

<div id="sizer"  class="font-size-switch floatleft">
 <a id="ancZoomOut" href="javascript:void(0)" onclick="return ZoomOut(1024)"> A </a>
 <a class="plus-icon" href="javascript:void(0)" onclick="return ZoomIn(1024)"> A </a>
   
    
</div>

                                
                                <!---font-size-switch ends--->
                                <!---font-size-switch starts--->
                                <div class="print-email floatleft">
                                    

<script language="javascript" type="text/javascript">

    function stripScripts(s) {
        var div = document.createElement('div');
        div.innerHTML = s;
        var scripts = div.getElementsByTagName('script');
        var i = scripts.length;
        while (i--) {
            scripts[i].parentNode.removeChild(scripts[i]);
        }
        return div.innerHTML;
    }
    
    var doc;
    function clickToPrint() {
        if (doc) {
            doc.close();
            doc = null;
            ClickToPrint();
        }
        else {

            var display = "toolbar=no,location=no,directories=no,menubar=yes,scrollbars=yes,resizable=yes,width=600, height=400, left=100, top=30";
            var content = document.getElementById("divMidContent").innerHTML;
            content = stripScripts(content);
 
            
            var doc = window.open("", "", display);
            doc.document.open();
            doc.document.write('<html><head><title>Messe Frankfurt - Print</title>');
            doc.document.write('<link href="/assets/styles/style.css" type="text/css" rel="stylesheet" >');
            doc.document.write('<script>');
            doc.document.write('window.setTimeout(function(){self.print()},1000);');
            doc.document.write('</'+'script>');
            doc.document.write('</head><body>');
            doc.document.write('<div class="mfcontentmid">');
            doc.document.write(content);
            doc.document.write('</div>');
            doc.document.write("</body></html>");
            doc.document.close();
            doc.focus();

        }
    }

</script>

<a href="javascript:clickToPrint();" id="PrintBox_lnkPrint">Print</a>
                                    <a id="lnkEmail" class="email">Recommend</a>
                                </div>
                                <!---font-size-switch ends--->
                            </div>
                            <!---mfBreadcrumb ends--->
                        </div>
                    </div>
                    <!---wrapper-content ends--->
                </div>
                
                <div id="divIFcontentarea">
                    <!---mfContentArea starts--->
                    <div class="mfcontentarea" id="divContent">
                        <!---mfcontentleft starts--->
                        <div class="mfcontentleft">
                            
                            
                            
           <ul class="leftnav">
        
            <li><a id="LeftMenu_Sitemap_rptrTopMenu_lnkTopMenu_0" href="http://www.intersecexpo.com/frankfurt/51/for-exhibitors/for-exhibitors.aspx"><span>
                For Exhibitors
            </span> </a></li>

        
            <li><a id="LeftMenu_Sitemap_rptrTopMenu_lnkTopMenu_1" href="http://www.intersecexpo.com/frankfurt/sitemap/2/for-visitors.aspx"><span>
                For Visitors
            </span> </a></li>

        
            <li><a id="LeftMenu_Sitemap_rptrTopMenu_lnkTopMenu_2" href="http://www.intersecexpo.com/frankfurt/sitemap/12/for-organizer.aspx"><span>
                For Conferences
            </span> </a></li>

        
            <li><a id="LeftMenu_Sitemap_rptrTopMenu_lnkTopMenu_3" href="https://ae.messefrankfurt.com/dubai/en/media/technology-production/Intersec.html" target="_blank"><span>
                For Journalists
            </span> </a></li>

        
            <li><a id="LeftMenu_Sitemap_rptrTopMenu_lnkTopMenu_4" class="company" href="http://www.messefrankfurtme.com" target="_blank"><span>
                The Company
            </span> </a></li>

        
            </ul>
 
                            <a id="hidden_link" class="menu_link" href='http://www.intersecexpo.com/manage-menu.aspx?type=l&menu_id='></a>
                        </div>
                        <!---mfcontentleft ends--->
                        <!---mfContentMid starts--->
                        <div class="mfcontentmid" id="divMidContent">
                            <input type="hidden" name="ctl00$txthiddenVal" id="txthiddenVal" />
                            <input type="hidden" name="ctl00$txtZoomFactorIE" id="txtZoomFactorIE" />
                            
    <h1>
        Error
    </h1>
    <div class="mfcontentmid-wrapper">
        <div class="mfcontentmid-wrapper-txt">
            <div class="error-area">
               <img id="Img1" src="/assets/images/error.jpg" />
               
                <p>
                    <b>404 - page not found.<br /></b>
                        <br />
                        We are sorry, but the requested page was not found. 
                    <br />
                    <br />
                    How can we help you?<br />
                    <br />
                    <a href="http://www.intersecexpo.com/default.aspx" id="ContentPlaceHolder1_ancBackToHomePage" class="link">Back to homepage</a>.<br />
                    <br />
                    <a href="http://www.intersecexpo.com/frankfurt/196/messe-frankfurt/for-visitors/contact-us.aspx" id="ContentPlaceHolder1_ancContactMesseFrankfurt" class="link">Contact Messe Frankfurt</a>.<br />
                </p>
            </div>
        </div>
    </div>

                            
                        </div>
                        <!---mfContentMid ends--->
                        <!---mfcontentrht starts--->
                        <div class="rht-cnt">
                            
                            
                            
                            
                            
                        </div>
                        <!---mfcontentrht ends--->
                    </div>
                </div>
                
            </div>
            <!---wrapper-scroll ends--->
            <div id="divfooter">
                <!---mf-footer starts--->
                <div class="mf-footer">
                    
                    
                    <div class="footer-link">
                        <ul>
                            <li><a href="http://www.intersecexpo.com/frankfurt/sitemap/13/for-exhibitors.aspx" id="ancSitemap">Sitemap</a></li>
                            <li><a href="http://www.intersecexpo.com/frankfurt/196/messe-frankfurt/for-visitors/contact-us.aspx">Contact</a></li>
                            
                        </ul>
                        <p>
                            Copyright © Messe Frankfurt Middle East GmbH
                        </p>
                    </div>
                    
                </div>
                <!---mf-footer ends--->
            </div>
        </div>
        <!---wrapper ends--->
        <div style="display: none;">
            <div id="inline1" style="overflow: hidden; width: 650px; height: 450px;">
                <div id="close">
                    <a href="javascript:$.fancybox.close();">Close view</a>
                </div>
                <iframe id="mapframe" name="mapframe" width="650px" scrolling="no" height="450px"
                    frameborder="0" marginwidth="0" src="http://maps.google.com/maps/ms?msa=0&amp;msid=202448488457744227054.0004a9e582911718e5c25&amp;hl=en&amp;ie=UTF8&amp;ll=25.230411,55.28728&amp;spn=0.011646,0.01502&amp;z=15&amp;output=embed"
                    marginheight="0"></iframe>
            </div>
        </div>
    
<div class="aspNetHidden">

	<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="193A34DB" />
</div><input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="" /></form>
    <!-- Google Code for Remarketing Tag -->
    <!--------------------------------------------------
Remarketing tags may not be associated with personally identifiable information or placed on pages related to sensitive categories. See more information and instructions on how to setup the tag on: http://google.com/ads/remarketingsetup
--------------------------------------------------->
    <script type="text/javascript">
        /* <![CDATA[ */
        var google_conversion_id = 967439829;
        var google_custom_params = window.google_tag_params;
        var google_remarketing_only = true;
        /* ]]> */
    </script>
    <script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js">
    </script>
    <noscript>
        <div style="display: inline;">
            <img height="1" width="1" style="border-style: none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/967439829/?value=0&amp;guid=ON&amp;script=0" />
        </div>
    </noscript>
    <!-- Start of Async HubSpot Analytics Code -->
    <script type="text/javascript">

        (function (d, s, i, r) {

            if (d.getElementById(i)) { return; }

            var n = d.createElement(s), e = d.getElementsByTagName(s)[0];

            n.id = i; n.src = '//js.hs-analytics.net/analytics/' + (Math.ceil(new Date() / r) * r) + '/1624324.js';

            e.parentNode.insertBefore(n, e);

        })(document, "script", "hs-analytics", 300000);

    </script>
    <!-- End of Async HubSpot Analytics Code -->
    <!-- Google Code für ein Remarketing-Tag -->
    <script type="text/javascript">
        /* <![CDATA[ */
        var google_conversion_id = 930344899;
        var google_custom_params = window.google_tag_params;
        var google_remarketing_only = true;
        /* ]]> */
    </script>
    <script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js">
    </script>
    <noscript>
        <div style="display: inline;">
            <img height="1" width="1" style="border-style: none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/930344899/?value=0&amp;guid=ON&amp;script=0" />
        </div>
    </noscript>
</body>
</html>
